const AblazeVue={install:function(e){const t=function(t,n,o){return e.component(t,{...n,...o})};t("example-test",{data:()=>({}),computed:{},mounted(){},methods:{}},{template:"<div>\n<h1>\n   My Vue App {{ name }}\n  </h1>\n</div>"}),t("api-form",{props:{name:String,url:String,crud:String,cors:{type:Boolean,default:!1}},data:()=>({valid:!1,default_form:{}}),computed:{form:{get:function(){return this.forms[this.name]},set:function(e){this.forms[this.name]=e}}},mounted(){this.default_form=JSON.parse(JSON.stringify(this.form))},methods:{sendToServer(){console.log("Sent to Server!"),this.resetDefaults()},resetDefaults(){this.form=JSON.parse(JSON.stringify(this.default_form))},submit(){this.$refs[this.name].validate(),this.valid&&this.sendToServer()},reset(){this.$refs[this.name].resetValidation()},clean(){this.resetDefaults()}}},{template:'<v-form :ref="name" v-model="valid">\n<slot v-bind:clean="clean" v-bind:form="form" v-bind:reset="reset" v-bind:submit="submit">\n</slot>\n</v-form>'}),t("the-view",{props:{cut:{default:0,type:Number},autoScroll:{default:!1,type:Boolean}},data:()=>({name:"testing"}),computed:{scroller:{get:function(){return this.routes[this.$route.name].scroller},set:function(e){this.routes[this.$route.name].scroller=e}}},mounted(){this.autoScroll&&this.pageScroll(this.scroller)},updated(){this.autoScroll&&this.pageScroll(this.scroller)},methods:{pageScroll(e){setTimeout(()=>this.$el.scroll(0,e),20)},onScroll(e){this.scroller=e.target.scrollTop}}},{template:'<v-container :style="{\n      maxHeight: ( (screen.height - cut) + \'px\' ),\n      overflowX: \'hidden\',\n    }" class="overflow-y-auto" v-bind="$attrs" v-scroll.self="onScroll">\n<slot></slot>\n<div style="min-height: 250px"></div>\n</v-container>'}),t("abz-main-bar",{data:()=>({}),computed:{},mounted(){},methods:{}},{template:'<v-app-bar app="" color="deep-purple accent-4" dark="">\n<v-app-bar-nav-icon></v-app-bar-nav-icon>\n<v-btn icon="">\n<v-icon>mdi-home</v-icon>\n</v-btn>\n<v-btn @click="go(\'userProfile\', { username: \'toxic\' })" icon="">\n<v-icon>mdi-heart</v-icon>\n</v-btn>\n<v-toolbar-title>Home</v-toolbar-title>\n<v-spacer></v-spacer>\n<v-toolbar-title>{{ __keys__ }}</v-toolbar-title>\n</v-app-bar>'}),t("example-form",{data:()=>({name:"testing"}),computed:{},mounted(){},methods:{}},{template:'<api-form cors="" crud="create" name="users" url="/json" v-slot="{ form, submit, clean, reset }">\n<v-text-field :rules="[\n        v =&gt; !!v || \'Primary-Key is required\',\n    ]" @click:append="reset" @input="$nextTick(() =&gt; { form.name = $ablaze.field.username( form.name ) })" append-icon="mdi-plus" label="Globals" v-model="form.name"></v-text-field>\n<v-btn @click="submit" color="success" depressed="">\n      submit\n    </v-btn>\n<v-btn @click="reset" color="info" depressed="">\n      reset\n    </v-btn>\n<v-btn @click="clean" color="warning" depressed="">\n      clean\n    </v-btn>\n</api-form>'})}};
const VuePage=function(e,a){return{...e,...a}},PageHome=VuePage({props:{},data:()=>({}),computed:{},mounted(){},updated(){},methods:{}},{template:'<v-app>\n<abz-main-bar></abz-main-bar>\n<v-navigation-drawer :value="false" app="">\n<h1>Left</h1>\n</v-navigation-drawer>\n<v-navigation-drawer :value="false" app="" right="">\n<h1>Right</h1>\n</v-navigation-drawer>\n<v-main>\n<the-view auto-scroll="" cut="120" fluid="">\n<h1>Main</h1>\n        {{ $ablaze.lorem.s( 100 ) }}\n      </the-view>\n</v-main>\n<v-footer app="" padless="">\n<v-col class="text-center" cols="12">\n        {{ new Date().getFullYear() }} â€” <strong>Ablaze</strong>\n</v-col>\n</v-footer>\n</v-app>'}),PageUserProfile=VuePage({props:{},data:()=>({}),computed:{},mounted(){},updated(){},methods:{}},{template:"<div>\n<h1 @click=\"go('basics/home')\"> User {{ $route.params.username }} </h1>\n</div>"}),PageBasicsDebug=VuePage({},{template:"<div>\n<h1> Debug </h1>\n</div>"}),PageBasics404=VuePage({props:{},data:()=>({}),computed:{},mounted(){},updated(){},methods:{}},{template:"<v-app>\n<v-main>\n<the-view>\n<h1>Error 404</h1>\n</the-view>\n</v-main>\n</v-app>"});